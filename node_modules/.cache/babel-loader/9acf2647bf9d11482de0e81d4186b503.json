{"ast":null,"code":"//  Triangulation sets of three\nexport const TRIANGULATION = [[0, 0, 0], [52, 65, 222, 52, 223, 222, 223, 222, 28, 222, 28, 56, 222, 221, 56, 222, 65, 55, 221, 55, 193, 221, 189, 193, 56, 189, 190, 190, 243, 244, 189, 244, 245], [124, 113, 130, 124, 46, 113, 113, 130, 247, 46, 225, 113, 225, 247, 30, 46, 225, 53, 53, 225, 224, 224, 29, 30, 53, 224, 223, 223, 29, 27, 223, 28, 27, 247, 246, 30, 246, 30, 161, 30, 161, 160, 29, 160, 159, 27, 159, 158, 27, 28, 158]]; // Drawing Mesh\n\nexport const drawDots = (predictions, ctx, draw, showCanvas) => {\n  if (predictions.length > 0) {\n    predictions.forEach(prediction => {\n      const keypoints = prediction.scaledMesh; // Draw Dots\n\n      if (showCanvas === true) {\n        for (let i = 0; i < keypoints.length; i++) {\n          const x = keypoints[i][0];\n          const y = keypoints[i][1];\n          ctx.beginPath();\n          ctx.arc(x, y, 1\n          /* radius */\n          , 0, 3 * Math.PI);\n          ctx.fillStyle = \"white\";\n          ctx.fill();\n        }\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/zelinpu/Desktop/the-mountain/src/Dots.js"],"names":["TRIANGULATION","drawDots","predictions","ctx","draw","showCanvas","length","forEach","prediction","keypoints","scaledMesh","i","x","y","beginPath","arc","Math","PI","fillStyle","fill"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CACzB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADyB,EAEzB,CAAC,EAAD,EACA,EADA,EAEF,GAFE,EAGF,EAHE,EAIF,GAJE,EAKF,GALE,EAMF,GANE,EAOF,GAPE,EAQF,EARE,EASF,GATE,EAUF,EAVE,EAWF,EAXE,EAYF,GAZE,EAaF,GAbE,EAcF,EAdE,EAeF,GAfE,EAgBF,EAhBE,EAiBF,EAjBE,EAkBF,GAlBE,EAmBF,EAnBE,EAoBF,GApBE,EAqBF,GArBE,EAsBF,GAtBE,EAuBF,GAvBE,EAwBF,EAxBE,EAyBF,GAzBE,EA0BF,GA1BE,EA2BF,GA3BE,EA4BF,GA5BE,EA6BF,GA7BE,EA8BF,GA9BE,EA+BF,GA/BE,EAgCF,GAhCE,CAFyB,EAmCzB,CACF,GADE,EAEF,GAFE,EAGF,GAHE,EAIF,GAJE,EAKF,EALE,EAMF,GANE,EAOF,GAPE,EAQF,GARE,EASF,GATE,EAUF,EAVE,EAWF,GAXE,EAYF,GAZE,EAaF,GAbE,EAcF,GAdE,EAeF,EAfE,EAgBF,EAhBE,EAiBF,GAjBE,EAkBF,EAlBE,EAmBF,EAnBE,EAoBF,GApBE,EAqBF,GArBE,EAsBF,GAtBE,EAuBF,EAvBE,EAwBF,EAxBE,EAyBF,EAzBE,EA0BF,GA1BE,EA2BF,GA3BE,EA4BF,GA5BE,EA6BF,EA7BE,EA8BF,EA9BE,EA+BF,GA/BE,EAgCF,EAhCE,EAiCF,EAjCE,EAkCF,GAlCE,EAmCF,GAnCE,EAoCF,EApCE,EAqCF,GArCE,EAsCF,EAtCE,EAuCF,GAvCE,EAwCF,EAxCE,EAyCF,GAzCE,EA0CF,GA1CE,EA2CF,EA3CE,EA4CF,GA5CE,EA6CF,GA7CE,EA8CF,EA9CE,EA+CF,GA/CE,EAgDF,GAhDE,EAiDF,EAjDE,EAkDF,EAlDE,EAmDF,GAnDE,CAnCyB,CAAtB,C,CA2FL;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,WAAD,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,KAAwC;AAC9D,MAAIH,WAAW,CAACI,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BJ,IAAAA,WAAW,CAACK,OAAZ,CAAqBC,UAAD,IAAgB;AAClC,YAAMC,SAAS,GAAGD,UAAU,CAACE,UAA7B,CADkC,CAGlC;;AACA,UAAIL,UAAU,KAAK,IAAnB,EAAyB;AACvB,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACH,MAA9B,EAAsCK,CAAC,EAAvC,EAA2C;AACzC,gBAAMC,CAAC,GAAGH,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAV;AACA,gBAAME,CAAC,GAAGJ,SAAS,CAACE,CAAD,CAAT,CAAa,CAAb,CAAV;AAEAR,UAAAA,GAAG,CAACW,SAAJ;AACAX,UAAAA,GAAG,CAACY,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAc;AAAE;AAAhB,YAA8B,CAA9B,EAAiC,IAAIG,IAAI,CAACC,EAA1C;AACAd,UAAAA,GAAG,CAACe,SAAJ,GAAgB,OAAhB;AACAf,UAAAA,GAAG,CAACgB,IAAJ;AACD;AACF;AACF,KAfD;AAgBD;AACF,CAnBM","sourcesContent":["//  Triangulation sets of three\nexport const TRIANGULATION = [\n    [0, 0, 0],\n    [52,\n    65,\n  222,\n  52,\n  223,\n  222,\n  223,\n  222,\n  28,\n  222,\n  28,\n  56,\n  222,\n  221,\n  56,\n  222,\n  65,\n  55,\n  221,\n  55,\n  193,\n  221,\n  189,\n  193,\n  56,\n  189,\n  190,\n  190,\n  243,\n  244,\n  189,\n  244,\n  245,\n  ],[\n  124,\n  113,\n  130,\n  124,\n  46,\n  113,\n  113,\n  130,\n  247,\n  46,\n  225,\n  113,\n  225,\n  247,\n  30,\n  46,\n  225,\n  53,\n  53,\n  225,\n  224,\n  224,\n  29,\n  30,\n  53,\n  224,\n  223,\n  223,\n  29,\n  27,\n  223,\n  28,\n  27,\n  247,\n  246,\n  30,\n  246,\n  30,\n  161,\n  30,\n  161,\n  160,\n  29,\n  160,\n  159,\n  27,\n  159,\n  158,\n  27,\n  28,\n  158,\n  ],\n  ];\n\n  \n  // Drawing Mesh\n  export const drawDots = (predictions, ctx, draw, showCanvas) => {\n    if (predictions.length > 0) {\n      predictions.forEach((prediction) => {\n        const keypoints = prediction.scaledMesh;\n  \n        // Draw Dots\n        if (showCanvas === true) {\n          for (let i = 0; i < keypoints.length; i++) {\n            const x = keypoints[i][0];\n            const y = keypoints[i][1];\n  \n            ctx.beginPath();\n            ctx.arc(x, y, 1 /* radius */, 0, 3 * Math.PI);\n            ctx.fillStyle = \"white\";\n            ctx.fill();\n          }\n        }\n      });\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}