{"ast":null,"code":"var _jsxFileName = \"/Users/zelinpu/Desktop/the-mountain/src/Snip.js\";\nimport React from 'react';\nimport { makeStyles, useState, useRef } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  }\n});\nexport default function ImgCard(props) {\n  const classes = useStyles();\n  const [isSendingSkin, setIsSendingSkin] = useState(false);\n  const [isSendingOrgans, setIsSendingOrgans] = useState(false);\n  const isMounted = useRef(true); // set isMounted to false when we unmount the component\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  const sendSkinRequest = useCallback(async () => {\n    if (isSending) return; // update state\n\n    setIsSending(true);\n    var data = new FormData();\n    data.append('file', props.img.files[0]);\n\n    for (var pair of data.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    try {\n      const result = await fetch('https://aebbe9f73e8e.ngrok.io/predict', {\n        method: 'POST',\n        //headers: { \"Content-Type\": \"multipart/form-data\" },\n        body: data\n      });\n      const res = await result.json();\n      console.log(res);\n    } catch (e) {\n      return null;\n    }\n\n    if (isMounted.current) // only update if we are still mounted\n      setIsSending(false);\n  }, [isSending]); // update the callback if the state changes\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    alt: \"Contemplative Reptile\",\n    height: \"140\",\n    image: props.img,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"\\u622A\\u56FE\\u7ED3\\u679C\\u533A\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"\\u53EF\\u4EE5\\u9009\\u62E9\\u5C06\\u622A\\u56FE\\u4E0A\\u4F20\\u81F3\\u542F\\u51CC\\u670D\\u52A1\\u5668\\uFF0C\\u67E5\\u770B\\u81EA\\u5DF1\\u8138\\u90E8\\u7684\\u76AE\\u80A4\\u60C5\\u51B5\\u548C\\u4E94\\u5B98\\u6BD4\\u4F8B\\u5206\\u6790\\uFF5E\"))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: isSending,\n    onClick: sendRequest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\u76AE\\u80A4\\u72B6\\u6001\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"\\u4E94\\u5B98\\u5206\\u6790\")));\n}","map":{"version":3,"sources":["/Users/zelinpu/Desktop/the-mountain/src/Snip.js"],"names":["React","makeStyles","useState","useRef","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useStyles","root","maxWidth","ImgCard","props","classes","isSendingSkin","setIsSendingSkin","isSendingOrgans","setIsSendingOrgans","isMounted","useEffect","current","sendSkinRequest","useCallback","isSending","setIsSending","data","FormData","append","img","files","pair","entries","console","log","result","fetch","method","body","res","json","e","sendRequest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,0BAA7C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAC;AAC3BW,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADqB,CAAD,CAA5B;AAMA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMmB,SAAS,GAAGlB,MAAM,CAAC,IAAD,CAAxB,CAJqC,CAMrC;;AACAmB,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACXD,MAAAA,SAAS,CAACE,OAAV,GAAoB,KAApB;AACD,KAFD;AAGD,GAJM,EAIJ,EAJI,CAAT;AAMA,QAAMC,eAAe,GAAGC,WAAW,CAAC,YAAW;AAC7C,QAAIC,SAAJ,EAAe,OAD8B,CAE7C;;AACAC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBf,KAAK,CAACgB,GAAN,CAAUC,KAAV,CAAgB,CAAhB,CAApB;;AACA,SAAI,IAAIC,IAAR,IAAgBL,IAAI,CAACM,OAAL,EAAhB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAJ,GAAS,IAAT,GAAeA,IAAI,CAAC,CAAD,CAA/B;AACJ;;AACD,QAAG;AACF,YAAMI,MAAM,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAClEC,QAAAA,MAAM,EAAE,MAD0D;AAElE;AACAC,QAAAA,IAAI,EAAEZ;AAH4D,OAA1C,CAA1B;AAKA,YAAMa,GAAG,GAAG,MAAMJ,MAAM,CAACK,IAAP,EAAlB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KARA,CAQA,OAAME,CAAN,EAAQ;AACT,aAAO,IAAP;AACD;;AACD,QAAItB,SAAS,CAACE,OAAd,EAAuB;AACvBI,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,GAtBoC,EAsBlC,CAACD,SAAD,CAtBkC,CAAnC,CAbqC,CAmCvB;;AAEd,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACJ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,GAAG,EAAC,uBAFN;AAGE,IAAA,MAAM,EAAC,KAHT;AAIE,IAAA,KAAK,EAAEG,KAAK,CAACgB,GAJf;AAKE,IAAA,KAAK,EAAC,uBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0NAJF,CARF,CADF,eAkBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAqC,IAAA,QAAQ,EAAEL,SAA/C;AAA0D,IAAA,OAAO,EAAEkB,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJF,CAlBF,CADF;AA6BD","sourcesContent":["import React from 'react';\nimport { makeStyles, useState, useRef } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nexport default function ImgCard(props) {\n  const classes = useStyles();\n  const [isSendingSkin, setIsSendingSkin] = useState(false);\n  const [isSendingOrgans, setIsSendingOrgans] = useState(false);\n  const isMounted = useRef(true);\n\n  // set isMounted to false when we unmount the component\n  useEffect(() => {\n      return () => {\n        isMounted.current = false\n      }\n    }, [])\n\n  const sendSkinRequest = useCallback(async() => {\n    if (isSending) return\n    // update state\n    setIsSending(true)\n    var data = new FormData();\n    data.append('file', props.img.files[0])\n    for(var pair of data.entries()) {\n        console.log(pair[0]+ ', '+ pair[1]); \n   }\n   try{    \n    const result = await fetch('https://aebbe9f73e8e.ngrok.io/predict', {\n      method: 'POST',\n      //headers: { \"Content-Type\": \"multipart/form-data\" },\n      body: data,\n  });\n    const res = await result.json(); \n    console.log(res)\n  }catch(e){\n  return null;\n}\nif (isMounted.current) // only update if we are still mounted\nsetIsSending(false)\n}, [isSending]) // update the callback if the state changes\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          image={props.img}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            截图结果区\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            可以选择将截图上传至启凌服务器，查看自己脸部的皮肤情况和五官比例分析～\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" disabled={isSending} onClick={sendRequest}>\n          皮肤状态\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          五官分析\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}"]},"metadata":{},"sourceType":"module"}