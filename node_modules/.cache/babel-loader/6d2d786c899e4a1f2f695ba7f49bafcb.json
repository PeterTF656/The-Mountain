{"ast":null,"code":"var _jsxFileName = \"/Users/zelinpu/Dev/FacialLandmarkDetection/src/App.js\";\n// 1. Install dependencies DONE\n// 2. Import dependencies DONE\n// 3. Setup webcam and canvas DONE\n// 4. Define references to those DONE\n// 5. Load posenet DONE\n// 6. Detect function DONE\n// 7. Drawing utilities from tensorflow DONE\n// 8. Draw functions DONE\n// Face Mesh - https://github.com/tensorflow/tfjs-models/tree/master/facemesh\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\"; // OLD MODEL\n//import * as facemesh from \"@tensorflow-models/facemesh\";\n// NEW MODEL\n\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\nimport { drawEyeMesh } from \"./eyeStepOne\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [draw, setDraw] = useState(0);\n\n  const handleClick = () => setDraw(draw + 1); //  Load posenet\n\n\n  const runFacemesh = async () => {\n    // OLD MODEL\n    // const net = await facemesh.load({\n    //   inputResolution: { width: 640, height: 480 },\n    //   scale: 0.8,\n    // });\n    // NEW MODEL\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n      // OLD MODEL\n      //       const face = await net.estimateFaces(video);\n      // NEW MODEL\n\n      const face = await net.estimateFaces({\n        input: video\n      });\n      console.log(face);\n\n      for (let i = 0; i < face.length; i++) {\n        const keypoints = face[i].scaledMesh; // Log facial keypoints.\n\n        for (let i = 0; i < keypoints.length; i++) {\n          const [x, y, z] = keypoints[i];\n          console.log(`Keypoint ${i}: [${x}, ${y}, ${z}]`);\n        }\n      } // Get canvas context\n\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      if (draw === 0) {\n        requestAnimationFrame(() => {\n          drawMesh(face, ctx);\n        });\n        console.log(draw);\n      } else if (draw === 1) {\n        // requestAnimationFrame(()=>{drawEyeMesh(face, ctx)});\n        console.log(\"draw = 1\");\n      } else {\n        return 0;\n      }\n    }\n  };\n\n  useEffect(() => {\n    runFacemesh();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"the variable draw is \", draw), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      right: 0\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"run mesh\")), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zelinpu/Dev/FacialLandmarkDetection/src/App.js"],"names":["React","useRef","useEffect","useState","tf","facemesh","Webcam","drawMesh","drawEyeMesh","App","webcamRef","canvasRef","draw","setDraw","handleClick","runFacemesh","net","load","SupportedPackages","mediapipeFacemesh","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","face","estimateFaces","input","console","log","i","length","keypoints","scaledMesh","x","y","z","ctx","getContext","requestAnimationFrame","right","position","marginLeft","marginRight","left","textAlign","zindex"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB,C,CACA;AACA;AAEA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,6CAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMU,SAAS,GAAGV,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAG,MAAMD,OAAO,CAACD,IAAI,GAAC,CAAN,CAAjC,CALa,CAMb;;;AACA,QAAMG,WAAW,GAAG,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,IAAT,CAAcZ,QAAQ,CAACa,iBAAT,CAA2BC,iBAAzC,CAAlB;AACAC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,MAAM,CAACL,GAAD,CAAN;AACD,KAFU,EAER,EAFQ,CAAX;AAGD,GAXD;;AAaA,QAAMK,MAAM,GAAG,MAAOL,GAAP,IAAe;AAC5B,QACE,OAAON,SAAS,CAACY,OAAjB,KAA6B,WAA7B,IACAZ,SAAS,CAACY,OAAV,KAAsB,IADtB,IAEAZ,SAAS,CAACY,OAAV,CAAkBC,KAAlB,CAAwBC,UAAxB,KAAuC,CAHzC,EAIE;AACA;AACA,YAAMD,KAAK,GAAGb,SAAS,CAACY,OAAV,CAAkBC,KAAhC;AACA,YAAME,UAAU,GAAGf,SAAS,CAACY,OAAV,CAAkBC,KAAlB,CAAwBE,UAA3C;AACA,YAAMC,WAAW,GAAGhB,SAAS,CAACY,OAAV,CAAkBC,KAAlB,CAAwBG,WAA5C,CAJA,CAMA;;AACAhB,MAAAA,SAAS,CAACY,OAAV,CAAkBC,KAAlB,CAAwBI,KAAxB,GAAgCF,UAAhC;AACAf,MAAAA,SAAS,CAACY,OAAV,CAAkBC,KAAlB,CAAwBK,MAAxB,GAAiCF,WAAjC,CARA,CAUA;;AACAf,MAAAA,SAAS,CAACW,OAAV,CAAkBK,KAAlB,GAA0BF,UAA1B;AACAd,MAAAA,SAAS,CAACW,OAAV,CAAkBM,MAAlB,GAA2BF,WAA3B,CAZA,CAcA;AACA;AACA;AACA;;AACA,YAAMG,IAAI,GAAG,MAAMb,GAAG,CAACc,aAAJ,CAAkB;AAACC,QAAAA,KAAK,EAACR;AAAP,OAAlB,CAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACM,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,cAAME,SAAS,GAAGP,IAAI,CAACK,CAAD,CAAJ,CAAQG,UAA1B,CADoC,CAGpC;;AACA,aAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,SAAS,CAACD,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,gBAAM,CAACI,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYJ,SAAS,CAACF,CAAD,CAA3B;AAEAF,UAAAA,OAAO,CAACC,GAAR,CAAa,YAAWC,CAAE,MAAKI,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAA7C;AACD;AACF,OA7BD,CA+BA;;;AACA,YAAMC,GAAG,GAAG9B,SAAS,CAACW,OAAV,CAAkBoB,UAAlB,CAA6B,IAA7B,CAAZ;;AACA,UAAI9B,IAAI,KAAK,CAAb,EAAgB;AAChB+B,QAAAA,qBAAqB,CAAC,MAAI;AAACpC,UAAAA,QAAQ,CAACsB,IAAD,EAAOY,GAAP,CAAR;AAAoB,SAA1B,CAArB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACC,OAHD,MAGO,IAAIA,IAAI,KAAK,CAAb,EAAgB;AACvB;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACC,OAHM,MAGA;AAAC,eAAO,CAAP;AAAS;AAClB;AACF,GA9CD;;AAgDA/B,EAAAA,SAAS,CAAC,MAAI;AAACa,IAAAA,WAAW;AAAG,GAApB,EAAsB,EAAtB,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA2BH,IAA3B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACE,IAAA,KAAK,EAAE;AAACgC,MAAAA,KAAK,EAAE;AAAR,KADT;AAEE,IAAA,OAAO,EAAE9B,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAFF,eASE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEJ,SADP;AAEE,IAAA,KAAK,EAAE;AACLmC,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,UAAU,EAAE,MAFP;AAGLC,MAAAA,WAAW,EAAE,MAHR;AAILC,MAAAA,IAAI,EAAE,CAJD;AAKLJ,MAAAA,KAAK,EAAE,CALF;AAMLK,MAAAA,SAAS,EAAE,QANN;AAOLC,MAAAA,MAAM,EAAE,CAPH;AAQLvB,MAAAA,KAAK,EAAE,GARF;AASLC,MAAAA,MAAM,EAAE;AATH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAgBE;AACE,IAAA,GAAG,EAAEjB,SADP;AAEE,IAAA,KAAK,EAAE;AACLkC,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,UAAU,EAAE,MAFP;AAGLC,MAAAA,WAAW,EAAE,MAHR;AAILC,MAAAA,IAAI,EAAE,CAJD;AAKLJ,MAAAA,KAAK,EAAE,CALF;AAMLK,MAAAA,SAAS,EAAE,QANN;AAOLC,MAAAA,MAAM,EAAE,CAPH;AAQLvB,MAAAA,KAAK,EAAE,GARF;AASLC,MAAAA,MAAM,EAAE;AATH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CATF,CADF;AA2CD;;AAED,eAAenB,GAAf","sourcesContent":["// 1. Install dependencies DONE\n// 2. Import dependencies DONE\n// 3. Setup webcam and canvas DONE\n// 4. Define references to those DONE\n// 5. Load posenet DONE\n// 6. Detect function DONE\n// 7. Drawing utilities from tensorflow DONE\n// 8. Draw functions DONE\n\n// Face Mesh - https://github.com/tensorflow/tfjs-models/tree/master/facemesh\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport * as tf from \"@tensorflow/tfjs\";\n// OLD MODEL\n//import * as facemesh from \"@tensorflow-models/facemesh\";\n\n// NEW MODEL\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\nimport { drawEyeMesh } from \"./eyeStepOne\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [draw, setDraw] = useState(0);\n\n  const handleClick = () => setDraw(draw+1)\n  //  Load posenet\n  const runFacemesh = async () => {\n    // OLD MODEL\n    // const net = await facemesh.load({\n    //   inputResolution: { width: 640, height: 480 },\n    //   scale: 0.8,\n    // });\n    // NEW MODEL\n    const net = await facemesh.load(facemesh.SupportedPackages.mediapipeFacemesh);\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      // OLD MODEL\n      //       const face = await net.estimateFaces(video);\n      // NEW MODEL\n      const face = await net.estimateFaces({input:video});\n      console.log(face);\n      for (let i = 0; i < face.length; i++) {\n        const keypoints = face[i].scaledMesh;\n  \n        // Log facial keypoints.\n        for (let i = 0; i < keypoints.length; i++) {\n          const [x, y, z] = keypoints[i];\n  \n          console.log(`Keypoint ${i}: [${x}, ${y}, ${z}]`);\n        }\n      }\n\n      // Get canvas context\n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (draw === 0) {\n      requestAnimationFrame(()=>{drawMesh(face, ctx)});\n      console.log(draw)\n      } else if (draw === 1) {\n      // requestAnimationFrame(()=>{drawEyeMesh(face, ctx)});\n      console.log(\"draw = 1\")\n      } else {return 0}\n    }\n  };\n\n  useEffect(()=>{runFacemesh()}, []);\n\n  return (\n    <div className=\"App\">\n      <div>the variable draw is {draw}</div>\n      <div>\n      <button \n        style={{right: 0}}\n        onClick={handleClick}>\n        run mesh\n      </button>\n      </div>\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}