{"ast":null,"code":"//  Triangulation sets of three\nexport const TRIANGULATION = [[0, 0, 0], [127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121, 128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9, 151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92, 186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56, 157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4, 144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91, 181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244, 159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117, 228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26, 209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211, 170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53, 52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173, 155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153, 22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28, 158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202, 204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49, 102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149, 176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89, 90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102, 49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122, 196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195, 3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110, 246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108, 151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246, 117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7, 33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162, 153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2, 97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13, 63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209, 198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214, 135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86, 179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61, 76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239, 237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59, 166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226, 23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56, 190, 28, 56, 221]]; // Triangle drawing method\n\nconst drawPath = (ctx, points, closePath) => {\n  const region = new Path2D();\n  region.moveTo(points[0][0], points[0][1]);\n\n  for (let i = 1; i < points.length; i++) {\n    const point = points[i];\n    region.lineTo(point[0], point[1]);\n  }\n\n  if (closePath) {\n    region.closePath();\n  }\n\n  ctx.strokeStyle = \"grey\";\n  ctx.stroke(region);\n}; // Drawing Mesh\n\n\nexport const drawMesh = (predictions, ctx, key) => {\n  if (predictions.length > 0) {\n    predictions.forEach(prediction => {\n      const keypoints = prediction.scaledMesh; //  Draw Triangles\n\n      for (let i = 0; i < TRIANGULATION[key].length / 3; i++) {\n        // Get sets of three keypoints for the triangle\n        const points = [TRIANGULATION[key][i * 3], TRIANGULATION[key][i * 3 + 1], TRIANGULATION[key][i * 3 + 2]].map(index => keypoints[index]); //  Draw triangle\n\n        drawPath(ctx, points, true);\n      } // Draw Dots\n\n\n      for (let i = 0; i < keypoints.length; i++) {\n        const x = keypoints[i][0];\n        const y = keypoints[i][1];\n        ctx.beginPath();\n        ctx.arc(x, y, 1\n        /* radius */\n        , 0, 3 * Math.PI);\n        ctx.fillStyle = \"aqua\";\n        ctx.fill();\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/zelinpu/Dev/FacialLandmarkDetection/src/utilities.js"],"names":["TRIANGULATION","drawPath","ctx","points","closePath","region","Path2D","moveTo","i","length","point","lineTo","strokeStyle","stroke","drawMesh","predictions","key","forEach","prediction","keypoints","scaledMesh","map","index","x","y","beginPath","arc","Math","PI","fillStyle","fill"],"mappings":"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","sourcesContent":["//  Triangulation sets of three\nexport const TRIANGULATION = [\n  [0, 0, 0],[127,\n    34,\n    139,\n    11,\n    0,\n    37,\n    232,\n    231,\n    120,\n    72,\n    37,\n    39,\n    128,\n    121,\n    47,\n    232,\n    121,\n    128,\n    104,\n    69,\n    67,\n    175,\n    171,\n    148,\n    157,\n    154,\n    155,\n    118,\n    50,\n    101,\n    73,\n    39,\n    40,\n    9,\n    151,\n    108,\n    48,\n    115,\n    131,\n    194,\n    204,\n    211,\n    74,\n    40,\n    185,\n    80,\n    42,\n    183,\n    40,\n    92,\n    186,\n    230,\n    229,\n    118,\n    202,\n    212,\n    214,\n    83,\n    18,\n    17,\n    76,\n    61,\n    146,\n    160,\n    29,\n    30,\n    56,\n    157,\n    173,\n    106,\n    204,\n    194,\n    135,\n    214,\n    192,\n    203,\n    165,\n    98,\n    21,\n    71,\n    68,\n    51,\n    45,\n    4,\n    144,\n    24,\n    23,\n    77,\n    146,\n    91,\n    205,\n    50,\n    187,\n    201,\n    200,\n    18,\n    91,\n    106,\n    182,\n    90,\n    91,\n    181,\n    85,\n    84,\n    17,\n    206,\n    203,\n    36,\n    148,\n    171,\n    140,\n    92,\n    40,\n    39,\n    193,\n    189,\n    244,\n    159,\n    158,\n    28,\n    247,\n    246,\n    161,\n    236,\n    3,\n    196,\n    54,\n    68,\n    104,\n    193,\n    168,\n    8,\n    117,\n    228,\n    31,\n    189,\n    193,\n    55,\n    98,\n    97,\n    99,\n    126,\n    47,\n    100,\n    166,\n    79,\n    218,\n    155,\n    154,\n    26,\n    209,\n    49,\n    131,\n    135,\n    136,\n    150,\n    47,\n    126,\n    217,\n    223,\n    52,\n    53,\n    45,\n    51,\n    134,\n    211,\n    170,\n    140,\n    67,\n    69,\n    108,\n    43,\n    106,\n    91,\n    230,\n    119,\n    120,\n    226,\n    130,\n    247,\n    63,\n    53,\n    52,\n    238,\n    20,\n    242,\n    46,\n    70,\n    156,\n    78,\n    62,\n    96,\n    46,\n    53,\n    63,\n    143,\n    34,\n    227,\n    173,\n    155,\n    133,\n    123,\n    117,\n    111,\n    44,\n    125,\n    19,\n    236,\n    134,\n    51,\n    216,\n    206,\n    205,\n    154,\n    153,\n    22,\n    39,\n    37,\n    167,\n    200,\n    201,\n    208,\n    36,\n    142,\n    100,\n    57,\n    212,\n    202,\n    20,\n    60,\n    99,\n    28,\n    158,\n    157,\n    35,\n    226,\n    113,\n    160,\n    159,\n    27,\n    204,\n    202,\n    210,\n    113,\n    225,\n    46,\n    43,\n    202,\n    204,\n    62,\n    76,\n    77,\n    137,\n    123,\n    116,\n    41,\n    38,\n    72,\n    203,\n    129,\n    142,\n    64,\n    98,\n    240,\n    49,\n    102,\n    64,\n    41,\n    73,\n    74,\n    212,\n    216,\n    207,\n    42,\n    74,\n    184,\n    169,\n    170,\n    211,\n    170,\n    149,\n    176,\n    105,\n    66,\n    69,\n    122,\n    6,\n    168,\n    123,\n    147,\n    187,\n    96,\n    77,\n    90,\n    65,\n    55,\n    107,\n    89,\n    90,\n    180,\n    101,\n    100,\n    120,\n    63,\n    105,\n    104,\n    93,\n    137,\n    227,\n    15,\n    86,\n    85,\n    129,\n    102,\n    49,\n    14,\n    87,\n    86,\n    55,\n    8,\n    9,\n    100,\n    47,\n    121,\n    145,\n    23,\n    22,\n    88,\n    89,\n    179,\n    6,\n    122,\n    196,\n    88,\n    95,\n    96,\n    138,\n    172,\n    136,\n    215,\n    58,\n    172,\n    115,\n    48,\n    219,\n    42,\n    80,\n    81,\n    195,\n    3,\n    51,\n    43,\n    146,\n    61,\n    171,\n    175,\n    199,\n    81,\n    82,\n    38,\n    53,\n    46,\n    225,\n    144,\n    163,\n    110,\n    246,\n    33,\n    7,\n    52,\n    65,\n    66,\n    229,\n    228,\n    117,\n    34,\n    127,\n    234,\n    107,\n    108,\n    69,\n    109,\n    108,\n    151,\n    48,\n    64,\n    235,\n    62,\n    78,\n    191,\n    129,\n    209,\n    126,\n    111,\n    35,\n    143,\n    163,\n    161,\n    246,\n    117,\n    123,\n    50,\n    222,\n    65,\n    52,\n    19,\n    125,\n    141,\n    221,\n    55,\n    65,\n    3,\n    195,\n    197,\n    25,\n    7,\n    33,\n    220,\n    237,\n    44,\n    70,\n    71,\n    139,\n    122,\n    193,\n    245,\n    247,\n    130,\n    33,\n    71,\n    21,\n    162,\n    153,\n    158,\n    159,\n    170,\n    169,\n    150,\n    188,\n    174,\n    196,\n    216,\n    186,\n    92,\n    144,\n    160,\n    161,\n    2,\n    97,\n    167,\n    141,\n    125,\n    241,\n    164,\n    167,\n    37,\n    72,\n    38,\n    12,\n    145,\n    159,\n    160,\n    38,\n    82,\n    13,\n    63,\n    68,\n    71,\n    226,\n    35,\n    111,\n    158,\n    153,\n    154,\n    101,\n    50,\n    205,\n    206,\n    92,\n    165,\n    209,\n    198,\n    217,\n    165,\n    167,\n    97,\n    220,\n    115,\n    218,\n    133,\n    112,\n    243,\n    239,\n    238,\n    241,\n    214,\n    135,\n    169,\n    190,\n    173,\n    133,\n    171,\n    208,\n    32,\n    125,\n    44,\n    237,\n    86,\n    87,\n    178,\n    85,\n    86,\n    179,\n    84,\n    85,\n    180,\n    83,\n    84,\n    181,\n    201,\n    83,\n    182,\n    137,\n    93,\n    132,\n    76,\n    62,\n    183,\n    61,\n    76,\n    184,\n    57,\n    61,\n    185,\n    212,\n    57,\n    186,\n    214,\n    207,\n    187,\n    34,\n    143,\n    156,\n    79,\n    239,\n    237,\n    123,\n    137,\n    177,\n    44,\n    1,\n    4,\n    201,\n    194,\n    32,\n    64,\n    102,\n    129,\n    213,\n    215,\n    138,\n    59,\n    166,\n    219,\n    242,\n    99,\n    97,\n    2,\n    94,\n    141,\n    75,\n    59,\n    235,\n    24,\n    110,\n    228,\n    25,\n    130,\n    226,\n    23,\n    24,\n    229,\n    22,\n    23,\n    230,\n    26,\n    22,\n    231,\n    112,\n    26,\n    232,\n    189,\n    190,\n    243,\n    221,\n    56,\n    190,\n    28,\n    56,\n    221,],\n];\n\n// Triangle drawing method\nconst drawPath = (ctx, points, closePath) => {\n  const region = new Path2D();\n  region.moveTo(points[0][0], points[0][1]);\n  for (let i = 1; i < points.length; i++) {\n    const point = points[i];\n    region.lineTo(point[0], point[1]);\n  }\n\n  if (closePath) {\n    region.closePath();\n  }\n  ctx.strokeStyle = \"grey\";\n  ctx.stroke(region);\n};\n\n// Drawing Mesh\nexport const drawMesh = (predictions, ctx, key) => {\n  if (predictions.length > 0) {\n    predictions.forEach((prediction) => {\n      const keypoints = prediction.scaledMesh;\n\n      //  Draw Triangles\n      for (let i = 0; i < TRIANGULATION[key].length / 3; i++) {\n        // Get sets of three keypoints for the triangle\n        const points = [\n          TRIANGULATION[key][i * 3],\n          TRIANGULATION[key][i * 3 + 1],\n          TRIANGULATION[key][i * 3 + 2],\n        ].map((index) => keypoints[index]);\n        //  Draw triangle\n        drawPath(ctx, points, true);\n      }\n\n      // Draw Dots\n      for (let i = 0; i < keypoints.length; i++) {\n        const x = keypoints[i][0];\n        const y = keypoints[i][1];\n\n        ctx.beginPath();\n        ctx.arc(x, y, 1 /* radius */, 0, 3 * Math.PI);\n        ctx.fillStyle = \"aqua\";\n        ctx.fill();\n      }\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}